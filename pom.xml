<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2021 Christopher Kujawa (zelldon91@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.zell</groupId>
    <artifactId>zdb</artifactId>
    <version>2.5.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>ZDB</name>
    <inceptionYear>2021</inceptionYear>
    <url>https://github.com/Zelldon/zdb</url>

    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <organization>
        <name>Christopher Kujawa</name>
        <url>https://github.com/zelldon</url>
    </organization>
    <properties>
        <assertj-core.version>3.26.0</assertj-core.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <junit-jupiter-api.version>5.11.0</junit-jupiter-api.version>
        <junit-jupiter-engine.version>5.10.2</junit-jupiter-engine.version>
        <junit-jupiter.version>1.19.8</junit-jupiter.version>
        <kotlin-maven-plugin.version>1.4.32</kotlin-maven-plugin.version>
        <kotlin-stdlib-jdk8.version>1.4.10</kotlin-stdlib-jdk8.version>
        <kotlin-test-junit5.version>1.4.10</kotlin-test-junit5.version>
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
        <kotlin.serialization.version>1.2.1</kotlin.serialization.version>
        <kotlin.version>1.7.10</kotlin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <plugin.version.checkstyle>3.4.0</plugin.version.checkstyle>
        <plugin.version.fmt>2.23</plugin.version.fmt>
        <version.slf4j>2.0.13</version.slf4j>
        <plugin.version.license>4.5</plugin.version.license>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.guava>30.0-jre</version.guava>
        <version.jackson-dataformat-msgpack>0.8.21</version.jackson-dataformat-msgpack>
        <version.kryo>4.0.2</version.kryo>
        <version.log4j>2.14.1</version.log4j>
        <version.picocli>4.5.0</version.picocli>
        <zeebe-bpmn-model.version>1.0.0</zeebe-bpmn-model.version>
        <zeebe-client-java.version>1.0.0</zeebe-client-java.version>
        <zeebe-test-container.version>3.0.0</zeebe-test-container.version>
        <zeebe-test-util.version>1.0.0</zeebe-test-util.version>
        <zeebe-util.version>1.0.0</zeebe-util.version>
        <zeebe.version>8.5.3</zeebe.version>
        <sonar.organization>zelldon-github</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <version.jib>3.4.3</version.jib>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-bom</artifactId>
                <version>${zeebe.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>backend</module>
        <module>cli</module>
        <module>frontend</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${version.jib}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${version.jib}</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <to>
                        <image>ghcr.io/zelldon/zdb</image>
                        <tags>${project.version}</tags>
                    </to>
                    <container>
                        <mainClass>io.zell.zdb.ZeebeDebugger</mainClass>
                    </container>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${plugin.version.license}</version>
                <configuration>
                    <properties>
                        <owner>Christopher Kujawa</owner>
                        <email>zelldon91@gmail.com</email>
                    </properties>
                    <licenseSets>
                        <licenseSet>
                            <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                            <includes>
                                <include>**/*.java</include>
                                <include>**/*.kt</include>
                            </includes>
                            <excludes>
                                <exclude>licenses/*.txt</exclude>
                            </excludes>
                        </licenseSet>
                    </licenseSets>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                    <!--
                       Will only add license headers if file has none, to only add our copyright
                       to new added files. We need to make sure that the old ONF copyrights are saved
                       and not replaced accidentally.
                    -->
                    <skipExistingHeaders>true</skipExistingHeaders>
                </configuration>
                <executions>
                    <execution>
                        <id>add-license</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
